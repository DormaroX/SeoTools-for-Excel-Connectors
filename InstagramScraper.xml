<?xml version="1.0" encoding="utf-8" ?>
<Suite Title="Instagram Scraper" Id="InstagramScraper" Category="Social" RequireVersion="7.0" SourceUrl="https://github.com/nielsbosma/SeoTools-for-Excel-Connectors/blob/master/Instagramscraper.xml">

  <Author Name="Victor" Url="http://community.seotoolsforexcel.com/users/diskborste/activity"/>

  <RestConnector Title="Account Lookup by Username" Id="AccountLookupUsername">
    <Parameters>
      <Text Id="User" Title="Username or URL" Required="true" DefaultValue="" Debug.DefaultValue="zaralarsson"/>
    </Parameters>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        @FetchUserString()
        ]]>
      </Fetch.Url>
		</Fetch>
    <Parse>
      <Regex Title="Followers" Id="Followers" Expr="&quot;edge_followed_by&quot;:{&quot;count&quot;:(\d+)}" Group="1" Converter="Int"/>
      <Regex Title="Follows" Id="Follows" Expr="&quot;edge_follow&quot;:{&quot;count&quot;:(\d+)}" Group="1" Converter="Int"/>
      <Regex Title="Posts" Id="Posts" Expr="&quot;edge_owner_to_timeline_media&quot;:{&quot;count&quot;:(\d+)" Group="1" Converter="Int"/>
      <Regex Title="User Id" Id="UserId" Expr="&quot;owner&quot;:{&quot;id&quot;:&quot;(\d+)&quot;" Group="1" Converter="String" HelpText=""/>
      <Regex Title="Private" Id="UserId" Expr="&quot;is_private&quot;:(\w+)" Group="1" Converter="String" HelpText=""/>
      <Regex Title="Bio" Id="Bio" Expr="&quot;description&quot;:&quot;(.*?)&quot;" Group="1" Converter="String" DefaultValue="" HelpText=""/>
			<Regex Title ="External URL" Id="ExternalUrl" Expr="&quot;external_url&quot;:&quot;(.*?)&quot;" Group="1" Converter="String" DefaultValue=""/>
      <Regex Title="Avatar" Id="Avatar" Expr="&quot;profile_pic_url&quot;:&quot;(.*?)&quot;" Group="1" Converter="String"/>
    </Parse>
  </RestConnector>

  <RestConnector Title="Latest Posts from Account" Id="LatestPosts">
    <Parameters>
      <Text Id="User" Title="Username or URL" Required="true" DefaultValue="" Debug.DefaultValue="zaralarsson"/>
    </Parameters>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        @FetchUserString()
        ]]>
      </Fetch.Url>
		</Fetch>
    <Parse>
      <Regex Expr="shortcode&quot;:&quot;(.*?)&quot;" Group="1" DefaultValue="">
				<Compute Id="PostUrl" Title="Post URL" DefaultValue="">
					<Compute.Expr>
						<![CDATA[https://www.instagram.com/p/@(Model.PostIdInput)]]>
					</Compute.Expr>
					<Regex Expr=".*" Group="0" Id="PostIdInput" DefaultValue=""/>
				</Compute>
      </Regex>
			<Regex Expr="taken_at_timestamp&quot;:(\d+)" Group="1" Converter.SourceFormat="Unix" >
        <Regex Expr=".*" Title="Created" Id="Created" Group="0" Converter="DateTime" Converter.SourceFormat="Unix"/>
      </Regex>
			<Regex Expr="typename&quot;:&quot;(\w+)" Group="1" Converter="String" DefaultValue="">
				<Compute Id="Type" Title="Type" DefaultValue="">
					<Compute.Expr>
						<![CDATA[@Regex.Replace(Model.TypeInput, "Graph", "")]]>
					</Compute.Expr>
					<Regex Expr=".*" Group="0" Id="TypeInput" DefaultValue=""/>
				</Compute>
      </Regex>
			<Regex Expr="edge_liked_by&quot;:{&quot;count&quot;:(\d+)}" Group="1" Converter="Int" DefaultValue="">
        <Regex Expr=".*" Title="Likes" Id="Likes" Group="0" Converter="Long"/>
      </Regex>
			<Regex Expr="edge_media_to_comment&quot;:{&quot;count&quot;:(\d+)}" Group="1" Converter="Long" DefaultValue="">
        <Regex Expr=".*" Title="Comments" Id="Comments" Group="0" Converter="Long"/>
      </Regex>
			<Regex Expr="display_url&quot;:&quot;(.*?)&quot;" Group="1" Converter="String" DefaultValue="">
        <Regex Expr=".*" Title="Image URL" Id="ImageUrl" Group="0" Converter="String"/>
      </Regex>
    </Parse>
  </RestConnector>

  <RestConnector Title="Post Lookup" Id="PostLookup">
    <Parameters>
      <Text Id="Post" Title="Post URL or Shortcode" Required="true" Debug.DefaultValue="https://www.instagram.com/p/BhCZUzgAOhT/"/>
    </Parameters>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        @FetchPostString()
        ]]>
      </Fetch.Url>
		</Fetch>
    <Parse>
			<Compute Id="Url" Title="URL" Converter="String">
				<Compute.Expr>
					<![CDATA[
					@(!string.IsNullOrEmpty(Model.Shortcode) ? "https://www.instagram.com/p/" + Model.Shortcode : "")
					]]>
				</Compute.Expr>
				<Regex Id="Shortcode" Expr="shortcode&quot;:&quot;(.*?)&quot;" DefaultValue=""/>
			</Compute>
      <Regex Title="Created" Id="Created" Expr="taken_at_timestamp&quot;:(\d+)" Group="1" Converter="Auto" Converter.SourceFormat="Unix" DefaultValue=""/>
      <Regex Title="Likes" Id="Likes" Expr="media_preview_like&quot;:{&quot;count&quot;:(\d+)" Group="1" Converter="Auti" DefaultValue=""/>
      <Regex Title="Comments" Id="Comments" Expr="media_to_comment&quot;:{&quot;count&quot;:(\d+)" Group="1" Converter="Auto" DefaultValue=""/>
      <Regex Title="Video Views" Id="VideoViews" Expr="&quot;video_view_count&quot;:(\d+)" Group="1" Converter="Auto" DefaultValue=""/>
			<Compute Id="Type" Title="Type" DefaultValue="">
				<Compute.Expr>
					<![CDATA[
					@Regex.Replace(Model.TypeInput, "Graph", "")
					]]>
				</Compute.Expr>
				<Regex Expr="typename&quot;:&quot;(\w+)" Id="TypeInput" Group="1" Converter="String" DefaultValue=""/>
			</Compute>
      <Regex Title="Image URL" Id="ImageUrl" Expr="&quot;display_resources&quot;:\[{&quot;src&quot;:&quot;(.*?)&quot;" Group="1" Converter="String" DefaultValue=""/>
      <Xpath Title="User Id" Id="UserId" Expr="//meta[@@property='instapp:owner_user_id']" Attribute="content" Converter="String" DefaultValue=""/>
      <Regex Title="Username" Id="Username" Expr="rel=&quot;canonical&quot;\shref=&quot;https://www.instagram.com/(.*?)/p/" Group="1" Converter="Auto" DefaultValue=""/>
			<Compute Id="UserUrl" Title="User URL" DefaultValue="">
				<Compute.Expr>
					<![CDATA[https://www.instagram.com/@(Model.Inp)]]>
				</Compute.Expr>
      <Regex Id="Inp" Expr="rel=&quot;canonical&quot;\shref=&quot;https://www.instagram.com/(.*?)/p/" Group="1" Converter="Auto" DefaultValue=""/>
			</Compute>
			<Compute Id="Avatar" Title="Avatar" DefaultValue="">
				<Compute.Expr>
					<![CDATA[
          @{
            string body = Model.FetchedResult.Body;
						string strRegex = Model.Inp + "\",\"is_verified\":\\w+,\"profile_pic_url\":\"(.*?)\"";
            Regex regex = new Regex(@strRegex);
            Match match = regex.Match(body);
          }
          @(match.Groups[1].Value)
					]]>
				</Compute.Expr>
				<Xpath Id="Inp" Expr="//meta[@@property='instapp:owner_user_id']" Attribute="content" Converter="String"/>
			</Compute>
    </Parse>
  </RestConnector>

  <RestConnector Title="Post Lookup Oembed" Id="PostLookupOembed">
    <Parameters>
      <Text Id="Post" Title="Post URL or Shortcode" Required="true" Debug.DefaultValue="https://www.instagram.com/p/BhCZUzgAOhT/"/>
    </Parameters>
    <Fetch>
      <Fetch.Url>
        <![CDATA[
        https://api.instagram.com/oembed/?url=@FetchPostString()
        ]]>
      </Fetch.Url>
		</Fetch>
    <Parse>
      <JsonPath Title="Post Id" Id="PostId" Expr="media_id" Converter="String"/>
      <Regex Title="Created" Id="Created" Expr="datetime=\\&quot;(.*?)\\&quot;" Group="1" Converter="DateTime"/>
      <JsonPath Title="Text" Id="Text" Expr="title" Converter="String"/>
      <JsonPath Title="Author Id" Id="AuthorId" Expr="author_id" Converter="String"/>
      <JsonPath Title="Thumbnail" Id="Thumbnail" Expr="thumbnail_url" Converter="String"/>
      <JsonPath Title="User" Id="Author" Expr="author_name" Converter="String"/>
      <JsonPath Title="User URL" Id="AuthorUrl" Expr="author_url" Converter="String"/>
    </Parse>
  </RestConnector>

  <RazorFunctions>
    <![CDATA[
    string FetchPostString() {
			return (Model.Post.Contains("instagram.com") ? Model.Post : "https://www.instagram.com/p/" + Model.Post);
    }
    string FetchUserString() {
			return (Model.User.Contains("instagram.com") ? Model.User : "https://www.instagram.com/" + Model.User);
    }
    ]]>
  </RazorFunctions>

</Suite>